---
# tasks file for bitwarden
- name: Get currently-installed version
  become: false
  check_mode: false
  block:
    - name: Look up current version of Bitwarden
      command: dpkg-query -W -f ${Version} bitwarden
      register: dpkg_query_out
      changed_when: false
      failed_when: false
    - debug:
        msg: "Currently-installed version: {{ dpkg_query_out.stdout | default('0') }}"
      when:
        - ansible_verbosity > 0
    - name: Extract current version number
      set_fact:
        bw_current_version: "{{ dpkg_query_out.stdout |default('0') }}"
      when: dpkg_query_out is success

- name: Get latest version
  become: false
  check_mode: false
  block:
    - name: Look up latest release information
      uri:
        url: https://api.github.com/repos/bitwarden/desktop/releases/latest
        body_format: json
      register: bw_release
      changed_when: false
    - debug:
        msg: "Latest release: {{ bw_release.json.tag_name }}"
      when:
        - ansible_verbosity > 0
    - name: Extract latest version number
      set_fact:
        bw_latest_version: "{{ bw_release.json.tag_name }}"

- name: Check whether Bitwarden needs to be updated
  # The version string fetched from github has a "v" at the beginning,
  # e.g., "v2022.5.1". The one returned by dpkg-query doesn't.
  become: false
  check_mode: false
  block:
    - name: Nothing to upgrade
      meta: end_play
      when: bw_latest_version is version("v"+bw_current_version, "le")
    - name: Compare version numbers
      debug:
        msg: "Need to update"
      when: bw_latest_version is version("v"+bw_current_version, "gt")
    - name: Complement Compare version numbers
      debug:
        msg: "Don't Need to update"
      when: bw_latest_version is version("v"+bw_current_version, "le")

- name: Install new version
  become: true
  vars:
    # Let's build up the expression bit by bit. It'd be nice to do
    # this all in one go, but json_query doesn't allow us grep for the
    # asset whose name matches /.*\.deb$/.

    # There are a bunch of install packages. The one we want has a
    # name of the form "Bitwarden-<version>-<arch>.deb"
    # Where <version> doesn't have "v" in front, and
    # <arch> is "amd64"
    deb_rel_name: "Bitwarden-{{ bw_latest_version | replace('v', '', 1) }}-{{ bw_arch }}.deb"

    # Now build the query that'll extract that asset from the JSON
    # file.
    query: "assets[?name==`{{ deb_rel_name }}`]"

    # Extract the asset. This includes a bunch of information,
    # including the name (which we're keying off of), the size, the
    # download URL, and more.
    asset: "{{ bw_release.json | json_query(query) }}"

    # And now extract the URL
    download_url: "{{ asset[0]['browser_download_url'] }}"
  apt:
    state: present
    deb: "{{ download_url }}"
